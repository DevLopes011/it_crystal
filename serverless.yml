# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: lopes011
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: it-crystal
# "service" is the name of this project. This will also be added to your AWS resource names.
service: it-crystal

provider:
  name: aws
  runtime: python3.12
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb: PutItem
        - dynamodb: GetItem
        - dynamodb: UpdateItem
        - dynamodb: DeleteItem
        - dynamodb: Scan

      Resource:
        - "arn:aws:dynamodb:us-east-1:*:table/Equipment_table"

custom:
  serverless-offline:
    https:
      enabled: false
      port: 9229

functions:  
  create_equipment_handler:
    handler: src.adapters.driver.AWS_Lambda.handlers.create_equipment_handler.create_equipment_handler
    events:
      - http:
          path: /equipment/create
          method: post

  list_equipment_handler:
    handler: src.adapters.driver.AWS_Lambda.handlers.list_equipment_handler.list_equipment_handler
    events:
      - http:
          path: /equipment/list
          method: get

  get_equipment_handler:
    handler: src.adapters.driver.AWS_Lambda.handlers.get_equipment_handler.get_equipment_handler
    events:
      - http:
          path: /equipment/get/{id}
          method: get


  update_equipment_handler:
    handler: src.adapters.driver.AWS_Lambda.handlers.update_equipment_handler.update_equipment_handler
    events:
      - http:
          path: /equipment/update/{id}
          method: put

  delete_equipment_handler:
    handler: src.adapters.driver.AWS_Lambda.handlers.delete_equipment_handler.delete_equipment_handler
    events:
      - http:
          path: /equipment/delete/{id}
          method: delete

plugins:
  - serverless-python-requirements
  - serverless-offline

resources:
  Resources:
    equipmentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: equipment
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST